// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anime {
  id Int @id @default(autoincrement())
  title String
  episodeCount Int
  posterImage String
  trailerUrl  String
  imdbRating  Float @db.Float
  openingTheme String?
  endingTheme String?
  description  String @db.LongText
  reviews      Review[]
  genres       Genre[]
  studio       Studio[]
  characters   Character[]
  staff        Staff[]
  rating        Rating[]
  timestamp DateTime @default(now())


}

model User {
  id             Int         @id @default(autoincrement())
  username       String?     @unique  
  email          String      @unique 
  password       String
  profilePicture String?     @default("https://anime-imdb.s3.ap-south-1.amazonaws.com/defaultProfileImage.jpg")
  reviews        Review[]
  rating          Rating[]
  timestamp DateTime @default(now())
}

model Review {
  id   Int  @id @default(autoincrement())
  user User @relation(fields: [userId] , references: [id])
  userId Int
  anime   Anime  @relation(fields: [animeId] , references: [id])
  animeId Int
  content String @db.LongText
  timestamp DateTime @default(now())

}

model Rating {
  user User @relation(fields: [userId] , references: [id])
  userId Int
  anime Anime @relation(fields: [animeId] , references: [id])
  animeId Int
  rating Decimal @db.Decimal()


  @@unique([userId , animeId])
}


model Genre {
  id Int @id @default(autoincrement())
  name String @db.Text
  anime Anime @relation(fields: [animeId] , references: [id])
  animeId Int
  timestamp DateTime @default(now())
}


model Studio {
  id Int @id @default(autoincrement())
  name String @db.Text
  otherInfo String?
  anime Anime @relation(fields: [animeId] , references: [id])
  animeId Int
  timestamp DateTime @default(now())
}

model Character {
  id Int @id @default(autoincrement())
  name String
  anime Anime @relation(fields: [animeId] , references: [id])
  animeId Int
  
}

model Staff {
  id Int @id @default(autoincrement())
  name String @db.Text
  Role String @db.VarChar(255)
  anime Anime @relation(fields: [animeId] , references: [id])
  animeId Int
}

